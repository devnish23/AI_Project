Vagrant.configure("2") do |config|
  # Master Node
  config.vm.define "kmaster" do |master|
    master.vm.box = "ubuntu/focal64"
    master.vm.hostname = "kmaster"
    master.vm.network "public_network", bridge: "VirtualBox Host-Only Ethernet Adapter", ip: "192.168.56.10"
    master.vm.network "private_network", ip: "192.168.56.10"
    master.vm.provider "virtualbox" do |vb|
      vb.memory = 4096
      vb.cpus = 2
    end
    
    master.vm.provision "shell", inline: <<-SHELL
      # Update system and install dependencies
      apt-get update && apt-get upgrade -y
      apt-get install -y apt-transport-https curl
      
      # Configure containerd
      cat > /etc/modules-load.d/containerd.conf <<EOF
      overlay
      br_netfilter
      EOF
      
      # Load modules
      modprobe overlay
      modprobe br_netfilter
      
      # Configure sysctl params
      cat > /etc/sysctl.d/kubernetes.conf <<EOF
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
      EOF
      
      # Apply sysctl params
      sysctl --system
      
      # Install containerd
      apt-get update
      apt-get install -y containerd
      
      # Configure containerd
      containerd config default | tee /etc/containerd/config.toml
      
      # Enable and start containerd
      systemctl enable containerd
      systemctl start containerd
      systemctl status containerd
      
      # Configure containerd for Kubernetes
      sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
      systemctl restart containerd
      systemctl status containerd
      
      # Install kubeadm, kubelet and kubectl
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
      echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
      apt-get update
      apt-get install -y kubelet kubeadm kubectl
      
      # Initialize Kubernetes cluster
      kubeadm init --pod-network-cidr=10.244.0.0/16
      
      # Copy kubeconfig to vagrant user
      mkdir -p /home/vagrant/.kube
      cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
      chown vagrant:vagrant /home/vagrant/.kube/config
      
      # Install Flannel
      kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    SHELL
  end

  # Worker Node 1
  config.vm.define "kworker1" do |worker1|
    worker1.vm.box = "ubuntu/focal64"
    worker1.vm.hostname = "kworker1"
    worker1.vm.network "public_network", bridge: "VirtualBox Host-Only Ethernet Adapter", ip: "192.168.56.11"
    worker1.vm.network "private_network", ip: "192.168.56.11"
    worker1.vm.provider "virtualbox" do |vb|
      vb.memory = 4096
      vb.cpus = 2
    end

    worker1.vm.provision "shell", inline: <<-SHELL
      # Update system and install dependencies
      apt-get update && apt-get upgrade -y
      apt-get install -y apt-transport-https curl
      
      # Configure containerd
      cat > /etc/modules-load.d/containerd.conf <<EOF
      overlay
      br_netfilter
      EOF
      
      # Load modules
      modprobe overlay
      modprobe br_netfilter
      
      # Configure sysctl params
      cat > /etc/sysctl.d/kubernetes.conf <<EOF
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
      EOF
      
      # Apply sysctl params
      sysctl --system
      
      # Install containerd
      apt-get update
      apt-get install -y containerd
      
      # Configure containerd
      containerd config default | tee /etc/containerd/config.toml
      
      # Enable and start containerd
      systemctl enable containerd
      systemctl start containerd
      systemctl status containerd
      
      # Configure containerd for Kubernetes
      sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
      systemctl restart containerd
      systemctl status containerd
      
      # Install kubeadm, kubelet and kubectl
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
      echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
      apt-get update
      apt-get install -y kubelet kubeadm kubectl
    SHELL
  end

  # Worker Node 2
  config.vm.define "kworker2" do |worker2|
    worker2.vm.box = "ubuntu/focal64"
    worker2.vm.hostname = "kworker2"
    worker2.vm.network "public_network", bridge: "VirtualBox Host-Only Ethernet Adapter", ip: "192.168.56.12"
    worker2.vm.network "private_network", ip: "192.168.56.12"
    worker2.vm.provider "virtualbox" do |vb|
      vb.memory = 4096
      vb.cpus = 2
    end

    worker2.vm.provision "shell", inline: <<-SHELL
      # Update system and install dependencies
      apt-get update && apt-get upgrade -y
      apt-get install -y apt-transport-https curl
      
      # Configure containerd
      cat > /etc/modules-load.d/containerd.conf <<EOF
      overlay
      br_netfilter
      EOF
      
      # Load modules
      modprobe overlay
      modprobe br_netfilter
      
      # Configure sysctl params
      cat > /etc/sysctl.d/kubernetes.conf <<EOF
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
      EOF
      
      # Apply sysctl params
      sysctl --system
      
      # Install containerd
      apt-get update
      apt-get install -y containerd
      
      # Configure containerd
      containerd config default | tee /etc/containerd/config.toml
      
      # Enable and start containerd
      systemctl enable containerd
      systemctl start containerd
      systemctl status containerd
      
      # Configure containerd for Kubernetes
      sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
      systemctl restart containerd
      systemctl status containerd
      
      # Install kubeadm, kubelet and kubectl
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
      echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
      apt-get update
      apt-get install -y kubelet kubeadm kubectl
    SHELL
  end
end
